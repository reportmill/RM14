import java.text.SimpleDateFormat

plugins {
    id 'application'
    id 'maven-publish'
}

group 'com.reportmill'
version new SimpleDateFormat("yyyy.MM").format(new Date())

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src']
//sourceSets.main.output.resourcesDir = "build/classes/java/main"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
}

dependencies {
    implementation files('lib/eawt.jar')
    implementation files('lib/poi-3.7.jar')
    implementation files('lib/spell.jar')
}

mainClassName = 'com.reportmill.App'

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Main-Class': 'com.reportmill.App',
                'Class-Path': 'spell.jar',
                'Application-Name': 'RMStudio14',
        )
    }
    archiveBaseName = 'RMStudio14'
}

/**
 * Custom task to build jar that includes all dependencies.
 */
task buildMasterJar(type: Jar) {
    archiveBaseName = 'ReportMill14'
    manifest {
        attributes(
                'Main-Class': 'com.reportmill.App',
                'Application-Name': 'RMStudio14',
                'Permissions': 'all-permissions'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude('**/org/**', '**/rmtests/**', '**/test/**', '**/font_metrics.properties')
    processResources {
        finalizedBy ('buildInfo')
    }
    with jar
    dependsOn build
}

/**
 * Define package information.
 */
publishing {

    // Packages
    publications {

        // Standard maven package
        gpr (MavenPublication) {
            artifactId 'ReportMill14'
            artifact buildMasterJar // from(components.java)
            pom.withXml {
                asNode().dependencies.dependency.each { dep -> dep.parent().remove(dep) }
            }
        }
    }
}

/**
 * Writes the current build date into BuildInfo.txt, e.g.: Feb-02-23 09:31.
 */
tasks.register('buildInfo') {
    doLast {

        // Create BuildInfo text (date string) and write to file
        String buildInfoText = new SimpleDateFormat("MMM-dd-yy HH:MM").format(new Date());
        String buildInfoFilePathStr = buildDir.getAbsolutePath() + '/resources/main/com/reportmill/BuildInfo.txt';
        java.nio.file.Path buildInfoFilePath = java.nio.file.Paths.get(buildInfoFilePathStr);
        java.nio.file.Files.write(buildInfoFilePath, buildInfoText.getBytes());
    }
}

/**
 * Disable Gradle Metadata file generation.
 */
tasks.withType(GenerateModuleMetadata) { enabled = false }
